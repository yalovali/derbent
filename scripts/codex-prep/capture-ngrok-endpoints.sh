#!/bin/bash

# Capture current ngrok tunnel URLs and record them for Codex consumption.
# Run this after `start-ngrok-tunnels.sh` is up and the tunnels are active.

set -euo pipefail

SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
REPO_ROOT="$(cd "${SCRIPT_DIR}/../.." && pwd)"
OUTPUT_DIR="${REPO_ROOT}/.codex"
OUTPUT_FILE="${OUTPUT_DIR}/ngrok-endpoints.env"
NGROK_API_HOST="${NGROK_API_HOST:-http://127.0.0.1:4040}"

if ! command -v curl >/dev/null 2>&1; then
	echo "‚ùå curl is required to query the local ngrok API." >&2
	exit 1
fi

if ! command -v python3 >/dev/null 2>&1; then
	echo "‚ùå python3 is required for lightweight JSON parsing." >&2
	exit 1
fi

mkdir -p "${OUTPUT_DIR}"

echo "üîç Querying active ngrok tunnels from ${NGROK_API_HOST}/api/tunnels"
JSON="$(curl -sSf "${NGROK_API_HOST}/api/tunnels")"

readarray -t ENV_LINES < <(python3 - <<'PYCODE' "${JSON}"
import json, os, sys, urllib.parse
tunnels = json.loads(sys.argv[1]).get("tunnels", [])
env = {}
for tunnel in tunnels:
    name = tunnel.get("name")
    public_url = tunnel.get("public_url", "")
    if not name or not public_url:
        continue
    if name.endswith("derbent-app"):
        env["CODEX_APP_BASE_URL"] = public_url
    elif name.endswith("derbent-postgres"):
        if public_url.startswith("tcp://"):
            parsed = urllib.parse.urlparse(public_url)
            env["CODEX_DB_HOST"] = parsed.hostname or ""
            env["CODEX_DB_PORT"] = str(parsed.port or "")
            env["CODEX_DB_REMOTE_URL"] = public_url
if not env.get("CODEX_APP_BASE_URL"):
    print("No derbent-app tunnel found; ensure start-ngrok-tunnels.sh is running.", file=sys.stderr)
    sys.exit(1)
if "CODEX_DB_REMOTE_URL" not in env:
    print("No derbent-postgres tunnel found; ensure start-ngrok-tunnels.sh is running.", file=sys.stderr)
    sys.exit(1)
for key in sorted(env):
    print(f"{key}={env[key]}")
PYCODE
)

echo "üìù Writing tunnel endpoints to ${OUTPUT_FILE}"
{
	echo "# Generated by capture-ngrok-endpoints.sh"
	echo "# Timestamp: $(date -u +"%Y-%m-%dT%H:%M:%SZ")"
	for line in "${ENV_LINES[@]}"; do
		echo "${line}"
	done
	echo ""
	echo "# Copy/paste the exports below into your shell (if desired):"
	for line in "${ENV_LINES[@]}"; do
		echo "export ${line}"
	done
} >"${OUTPUT_FILE}"

echo "‚úÖ Recorded ngrok endpoints:"
cat "${OUTPUT_FILE}"

echo ""
echo "‚ÑπÔ∏è  To make these available to Codex, keep ${OUTPUT_FILE} in the repo before starting the session."
