# SQL Debug Profile
# This profile enables comprehensive SQL query logging while using the PostgreSQL database
# Use this profile when you need to debug database queries in a production-like environment
#
# Usage: mvn spring-boot:run -Dspring.profiles.active=sql-debug
#

server.port=${PORT:8080}

# Use default PostgreSQL database configuration
spring.datasource.url=jdbc:postgresql://localhost:5432/derbent
spring.datasource.username=postgres
spring.datasource.password=derbent
spring.datasource.driver-class-name=org.postgresql.Driver

# Hibernate configuration
spring.jpa.hibernate.ddl-auto=update
spring.sql.init.mode=never

# Vaadin configuration (same as default)
vaadin.launch-browser=true
vaadin.allowed-packages=com.vaadin,org.vaadin,com.flowingcode,tech.derbent
vaadin.devserver.enabled=false
vaadin.push.mode=disabled
atmosphere.interceptors.disabled=true
atmosphere.shareableThreadPool=false
atmosphere.useNativeImplementation=false
org.atmosphere.container.autoDetectHandler=false

# Base logging levels (keep framework logs minimal)
logging.level.root=INFO
logging.level.com.vaadin=WARN
logging.level.org.springframework=ERROR
logging.level.org.springframework.boot.devtools=warn
logging.level.org.atmosphere=WARN
logging.level.org.apache.catalina=WARN
logging.level.com.zaxxer.hikari=WARN

# Application logging
logging.level.tech.derbent.security.dev.DevSecurityConfig=DEBUG
logging.level.tech.derbent=DEBUG
logging.level.tech.derbent.Application=DEBUG
logging.level.ui_tests=DEBUG

# Console output configuration
spring.output.ansi.enabled=ALWAYS
logging.pattern.console=%clr(%d{${LOG_DATEFORMAT_PATTERN:HH:mm:ss.S}}){magenta} %clr(${LOG_LEVEL_PATTERN:%-5.5p}) \\(%clr(%file:%line){cyan}\\) %clr(%msg){red} %clr(%-40.40logger{39}){cyan}%n
logging.exception-conversion-word=%ex{short}

# ==================================================================================
# SQL DEBUGGING CONFIGURATION - Main purpose of this profile
# ==================================================================================

# Hibernate SQL logging
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.orm.jdbc.bind=TRACE
logging.level.org.hibernate.orm.jdbc.extract=TRACE

# Format SQL for better readability
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.use_sql_comments=true

# Optional: Log statistics (uncomment to enable)
# spring.jpa.properties.hibernate.generate_statistics=true
# logging.level.org.hibernate.stat=DEBUG

# Optional: Log slow queries only (uncomment and adjust threshold in ms)
# spring.jpa.properties.hibernate.session.events.log.LOG_QUERIES_SLOWER_THAN_MS=200

# Optional: Transaction debugging (uncomment to enable)
# logging.level.org.springframework.transaction=TRACE
# logging.level.org.springframework.orm.jpa=DEBUG

# Optional: Connection pool debugging (uncomment to enable)
# logging.level.com.zaxxer.hikari=DEBUG
# logging.level.com.zaxxer.hikari.HikariConfig=DEBUG
